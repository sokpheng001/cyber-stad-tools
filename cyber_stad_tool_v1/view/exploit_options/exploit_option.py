import sys
from abc import ABC
from colorama import Fore, Style
from weapons import sql_injection
from components import clear_screen_and_provide_with_banner, exit_message, invalid_input_option_message;
from view import template



#what to do with
class Exploit(ABC):
    __option = 0;
    # global option
    def choose_option_in_exploit(self):
        try:
            self.__option = str(input("[+] Insert an option: "));
            if self.__option.lower() == "exit":
                exit_message.exit_tool_message();
                sys.exit(0);
            elif self.__option.lower() == "clear":
                clear_screen_and_provide_with_banner.start();
                self.exploit_option();
            self.choosen_option(self.__option);
        except KeyboardInterrupt as error:
            exit_message.exit_tool_message();
            sys.exit(0);
        
    def exploit_option(self):
        print("[" + Fore.GREEN + "*" + Style.RESET_ALL +"] "  + "Choose to start attacking: ")
        print("..........................................\n")
        print("0. Back to previous option")
        print("1. SQL Injection.")
        print("2. Cross-site Scripting");
        print("3. Brute Force")
        print(Fore.GREEN + "(To clear) -> " + Style.RESET_ALL +  "Use \'clear\' command")
        print(Fore.RED + "(99 or Ctr + C or Exit) -> " + Style.RESET_ALL +  "To Exit ")
        print("---");
        self.choose_option_in_exploit();
        # //////////////////////////////////////////////////////////////////////////

    def choosen_option(self, option):
        try:
            # option = str(input("[+] Insert an option: "));
            # check is with clear keyword
            if option == "99":
                exit_message.exit_tool_message();
                sys.exit(0);
            elif option =="0":
                # call back
                template.cyber_stad();
                # call back
            elif option == "1":
                sql_injection.start_sql_injection();
            elif option == "2":
                print("This is cross-site scripting vulnerability")
            elif option == "3":
                print("This is Brute force vulnerability");
            elif option.lower() == "cleear" or option.lower() == "clea":
                print(Fore.RED + "=> Invalid command, it looks like you want to use \'clear\' command :) .!!!" + Style.RESET_ALL);
                self.choose_option_in_exploit();
            else:
                invalid_input_option_message.invalid_input_option_message();
                self.choose_option_in_exploit();
        except KeyboardInterrupt as error: 
            exit_message.exit_tool_message();
            sys.exit(0);